initSidebarItems({"constant":[["ProtobufCLabel_PROTOBUF_C_LABEL_OPTIONAL","A well-formed message can have zero or one of this field (but not more than one)."],["ProtobufCLabel_PROTOBUF_C_LABEL_REPEATED","This field can be repeated any number of times (including zero) in a well-formed message. The order of the repeated values will be preserved."],["ProtobufCLabel_PROTOBUF_C_LABEL_REQUIRED","A well-formed message must have exactly one of this field."],["ProtobufCType_PROTOBUF_C_TYPE_BOOL","< boolean"],["ProtobufCType_PROTOBUF_C_TYPE_BYTES","< arbitrary byte sequence"],["ProtobufCType_PROTOBUF_C_TYPE_DOUBLE","< double"],["ProtobufCType_PROTOBUF_C_TYPE_ENUM","< enumerated type"],["ProtobufCType_PROTOBUF_C_TYPE_FIXED32","< unsigned int32 (4 bytes)"],["ProtobufCType_PROTOBUF_C_TYPE_FIXED64","< unsigned int64 (8 bytes)"],["ProtobufCType_PROTOBUF_C_TYPE_FLOAT","< float"],["ProtobufCType_PROTOBUF_C_TYPE_INT32","< int32"],["ProtobufCType_PROTOBUF_C_TYPE_INT64","< int64"],["ProtobufCType_PROTOBUF_C_TYPE_MESSAGE","< nested message"],["ProtobufCType_PROTOBUF_C_TYPE_SFIXED32","< signed int32 (4 bytes)"],["ProtobufCType_PROTOBUF_C_TYPE_SFIXED64","< signed int64 (8 bytes)"],["ProtobufCType_PROTOBUF_C_TYPE_SINT32","< signed int32"],["ProtobufCType_PROTOBUF_C_TYPE_SINT64","< signed int64"],["ProtobufCType_PROTOBUF_C_TYPE_STRING","< UTF-8 or ASCII string"],["ProtobufCType_PROTOBUF_C_TYPE_UINT32","< unsigned int32"],["ProtobufCType_PROTOBUF_C_TYPE_UINT64","< unsigned int64"],["ProtobufCWireType_PROTOBUF_C_WIRE_TYPE_32BIT",""],["ProtobufCWireType_PROTOBUF_C_WIRE_TYPE_64BIT",""],["ProtobufCWireType_PROTOBUF_C_WIRE_TYPE_LENGTH_PREFIXED",""],["ProtobufCWireType_PROTOBUF_C_WIRE_TYPE_VARINT",""],["SG_CIPHER_AES_CBC_PKCS5",""],["SG_CIPHER_AES_CTR_NOPADDING",""],["SG_ERR_DUPLICATE_MESSAGE",""],["SG_ERR_FP_IDENT_MISMATCH",""],["SG_ERR_FP_VERSION_MISMATCH",""],["SG_ERR_INVAL",""],["SG_ERR_INVALID_KEY",""],["SG_ERR_INVALID_KEY_ID",""],["SG_ERR_INVALID_MAC",""],["SG_ERR_INVALID_MESSAGE",""],["SG_ERR_INVALID_PROTO_BUF",""],["SG_ERR_INVALID_VERSION",""],["SG_ERR_LEGACY_MESSAGE",""],["SG_ERR_MINIMUM",""],["SG_ERR_NOMEM",""],["SG_ERR_NO_SESSION",""],["SG_ERR_STALE_KEY_EXCHANGE",""],["SG_ERR_UNKNOWN",""],["SG_ERR_UNTRUSTED_IDENTITY",""],["SG_ERR_VRF_SIG_VERIF_FAILED",""],["SG_LOG_DEBUG",""],["SG_LOG_ERROR",""],["SG_LOG_INFO",""],["SG_LOG_NOTICE",""],["SG_LOG_WARNING",""],["SG_SUCCESS",""]],"fn":[["protobuf_c_buffer_simple_append","The `append` method for `ProtobufCBufferSimple`."],["protobuf_c_enum_descriptor_get_value","Look up a `ProtobufCEnumValue` from a `ProtobufCEnumDescriptor` by numeric value."],["protobuf_c_enum_descriptor_get_value_by_name","Look up a `ProtobufCEnumValue` from a `ProtobufCEnumDescriptor` by name."],["protobuf_c_message_check","Check the validity of a message object."],["protobuf_c_message_descriptor_get_field","Look up a `ProtobufCFieldDescriptor` from a `ProtobufCMessageDescriptor` by the tag value of the field."],["protobuf_c_message_descriptor_get_field_by_name","Look up a `ProtobufCFieldDescriptor` from a `ProtobufCMessageDescriptor` by the name of the field."],["protobuf_c_message_free_unpacked","Free an unpacked message object."],["protobuf_c_message_get_packed_size","Determine the number of bytes required to store the serialised message."],["protobuf_c_message_init","Initialise a message object from a message descriptor."],["protobuf_c_message_pack","Serialise a message from its in-memory representation."],["protobuf_c_message_pack_to_buffer","Serialise a message from its in-memory representation to a virtual buffer."],["protobuf_c_message_unpack","Unpack a serialised message into an in-memory representation."],["protobuf_c_service_descriptor_get_method_by_name","Look up a `ProtobufCMethodDescriptor` by name."],["protobuf_c_service_destroy","Free a service."],["protobuf_c_service_generated_init",""],["protobuf_c_service_invoke_internal",""],["protobuf_c_version","Get the version of the protobuf-c library. Note that this is the version of the library linked against, not the version of the headers compiled against."],["protobuf_c_version_number","Get the version of the protobuf-c library. Note that this is the version of the library linked against, not the version of the headers compiled against."],["session_pre_key_bundle_create",""],["session_pre_key_bundle_destroy",""],["session_pre_key_bundle_get_device_id",""],["session_pre_key_bundle_get_identity_key",""],["session_pre_key_bundle_get_pre_key",""],["session_pre_key_bundle_get_pre_key_id",""],["session_pre_key_bundle_get_registration_id",""],["session_pre_key_bundle_get_signed_pre_key",""],["session_pre_key_bundle_get_signed_pre_key_id",""],["session_pre_key_bundle_get_signed_pre_key_signature",""],["session_pre_key_create",""],["session_pre_key_deserialize",""],["session_pre_key_destroy",""],["session_pre_key_get_id",""],["session_pre_key_get_key_pair",""],["session_pre_key_serialize",""],["session_record_archive_current_state","Move the current session_state into the list of \"previous\" session states, and replace the current session_state with a fresh reset instance."],["session_record_copy",""],["session_record_create",""],["session_record_deserialize",""],["session_record_destroy",""],["session_record_get_previous_states_element",""],["session_record_get_previous_states_head",""],["session_record_get_previous_states_next",""],["session_record_get_previous_states_remove","Removes the specified node in the previous states list. @param node the node to remove @return the node immediately following the removed node, or null if at the end of the list"],["session_record_get_state",""],["session_record_get_user_record",""],["session_record_has_session_state",""],["session_record_is_fresh",""],["session_record_promote_state",""],["session_record_serialize",""],["session_record_set_state",""],["session_record_set_user_record",""],["session_signed_pre_key_create",""],["session_signed_pre_key_deserialize",""],["session_signed_pre_key_destroy",""],["session_signed_pre_key_get_id",""],["session_signed_pre_key_get_key_pair",""],["session_signed_pre_key_get_signature",""],["session_signed_pre_key_get_signature_len",""],["session_signed_pre_key_get_timestamp",""],["session_signed_pre_key_serialize",""],["signal_buffer_alloc","Allocate a new buffer to store data of the provided length."],["signal_buffer_append","Append the provided data to an existing buffer. Note: The underlying buffer is only expanded by an amount sufficient to hold the data being appended. There is no additional reserved space to reduce the need for memory allocations."],["signal_buffer_bzero_free","Zero and free the data buffer. This function should be used when the buffer contains sensitive data, to make sure the memory is cleared before being freed."],["signal_buffer_compare","Compare two buffers."],["signal_buffer_const_data","Gets the data pointer for the buffer. This can be used to read and write data stored in the buffer."],["signal_buffer_copy","Create a copy of an existing buffer."],["signal_buffer_create","Create a new buffer and copy the provided data into it."],["signal_buffer_data","Gets the data pointer for the buffer. This can be used to read and write data stored in the buffer."],["signal_buffer_free","Free the data buffer."],["signal_buffer_len","Gets the length of the data stored within the buffer."],["signal_buffer_list_alloc","Allocate a new buffer list."],["signal_buffer_list_at","Gets the value of the element at a particular index in the list"],["signal_buffer_list_bzero_free","Free the buffer list, including all the buffers added to it. This function should be used when the buffer list contains sensitive data, to make sure the memory is cleared before being freed."],["signal_buffer_list_copy","Create a copy of an existing buffer list."],["signal_buffer_list_free","Free the buffer list, including all the buffers added to it."],["signal_buffer_list_push_back","Push the provided buffer onto the end of the list. The list will take ownership of the buffer, and free it when the list is freed."],["signal_buffer_list_size","Gets the size of the buffer list."],["signal_buffer_n_copy","Create a copy of an existing buffer."],["signal_context_create","Create a new instance of the global library context."],["signal_context_destroy",""],["signal_context_set_crypto_provider","Set the crypto provider to be used by the Signal Protocol library."],["signal_context_set_locking_functions","Set the locking functions to be used by the Signal Protocol library for synchronization."],["signal_context_set_log_function","Set the log function to be used by the Signal Protocol library for logging."],["signal_int_list_alloc","Allocate a new int list"],["signal_int_list_at","Gets the value of the element at a particular index in the list"],["signal_int_list_free","Free the int list @param list the list to free"],["signal_int_list_push_back","Push a new value onto the end of the list"],["signal_int_list_size","Gets the size of the list."],["signal_protocol_identity_get_key_pair",""],["signal_protocol_identity_get_local_registration_id",""],["signal_protocol_identity_is_trusted_identity",""],["signal_protocol_identity_save_identity",""],["signal_protocol_pre_key_contains_key",""],["signal_protocol_pre_key_load_key",""],["signal_protocol_pre_key_remove_key",""],["signal_protocol_pre_key_store_key",""],["signal_protocol_sender_key_load_key",""],["signal_protocol_sender_key_store_key",""],["signal_protocol_session_contains_session",""],["signal_protocol_session_delete_all_sessions",""],["signal_protocol_session_delete_session",""],["signal_protocol_session_get_sub_device_sessions",""],["signal_protocol_session_load_session",""],["signal_protocol_session_store_session",""],["signal_protocol_signed_pre_key_contains_key",""],["signal_protocol_signed_pre_key_load_key",""],["signal_protocol_signed_pre_key_remove_key",""],["signal_protocol_signed_pre_key_store_key",""],["signal_protocol_store_context_create","Create a new instance of the Signal Protocol data store interface."],["signal_protocol_store_context_destroy",""],["signal_protocol_store_context_set_identity_key_store",""],["signal_protocol_store_context_set_pre_key_store",""],["signal_protocol_store_context_set_sender_key_store",""],["signal_protocol_store_context_set_session_store",""],["signal_protocol_store_context_set_signed_pre_key_store",""],["signal_type_ref",""],["signal_type_unref",""]],"struct":[["ProtobufCAllocator","Structure for defining a custom memory allocator."],["ProtobufCBuffer","Structure for defining a virtual append-only buffer. Used by  protobuf_c_message_pack_to_buffer() to abstract the consumption of serialized  bytes."],["ProtobufCEnumDescriptor","Describes an enumeration as a whole, with all of its values."],["ProtobufCEnumValue","Represents a single value of an enumeration."],["ProtobufCEnumValueIndex","Used by `ProtobufCEnumDescriptor` to look up enum values."],["ProtobufCFieldDescriptor","Describes a single field in a message."],["ProtobufCIntRange","Helper structure for optimizing int => index lookups in the case where the keys are mostly consecutive values, as they presumably are for enums and fields."],["ProtobufCMessage","An instance of a message."],["ProtobufCMessageDescriptor","Describes a message."],["ProtobufCMessageUnknownField","An unknown message field."],["ProtobufCMethodDescriptor","Method descriptor."],["ProtobufCService","Service."],["ProtobufCServiceDescriptor","Service descriptor."],["ec_key_pair",""],["ec_public_key",""],["ratchet_identity_key_pair",""],["sender_key_record",""],["session_pre_key",""],["session_pre_key_bundle",""],["session_record",""],["session_record_state_node",""],["session_signed_pre_key",""],["session_state",""],["signal_buffer",""],["signal_buffer_list",""],["signal_context",""],["signal_crypto_provider",""],["signal_int_list",""],["signal_protocol_address",""],["signal_protocol_identity_key_store",""],["signal_protocol_pre_key_store",""],["signal_protocol_sender_key_name",""],["signal_protocol_sender_key_store",""],["signal_protocol_session_store",""],["signal_protocol_signed_pre_key_store",""],["signal_protocol_store_context",""],["signal_type_base",""]],"type":[["ProtobufCClosure",""],["ProtobufCLabel","Message field rules."],["ProtobufCMessageInit",""],["ProtobufCServiceDestroy",""],["ProtobufCType","Field value types."],["ProtobufCWireType","Field wire types."],["protobuf_c_boolean","Boolean type."]]});